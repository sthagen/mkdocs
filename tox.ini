[tox]
envlist =
    py{37,38,39,310,py3}-{unittests,min-req,integration,integration-no-babel},
    black, isort, flake8, markdown-lint, linkchecker, jshint, csslint, nobabel, codespell

[testenv]
passenv = LANG
deps=
    py{37,38,39,310,py3}-integration: -rrequirements/project.txt
    py{37,38,39,310,py3}-min-req: -rrequirements/project-min.txt
    py{37,38,39,310,py3}-{unittests,min-req}: -rrequirements/test.txt
commands=
    {envpython} --version
    py{37,38,39,310,py3}-{unittests,min-req}:  {envbindir}/coverage run --source=mkdocs --omit 'mkdocs/tests/*' -m unittest discover -p '*tests.py' mkdocs --top-level-directory .
    py{37,38,39,310,py3}-unittests: {envbindir}/coverage xml
    py{37,38,39,310,py3}-unittests: {envbindir}/coverage report --show-missing
    py{37,38,39,310,py3}-integration: {envpython} -m mkdocs.tests.integration --output={envtmpdir}/builds

[testenv:black]
deps=black
skip_install=true
commands={envbindir}/black -l100 -tpy37 --skip-string-normalization mkdocs

[testenv:isort]
deps=isort
skip_install=true
commands={envbindir}/isort mkdocs

[testenv:flake8]
deps=flake8
skip_install=true
commands={envbindir}/flake8 mkdocs

[testenv:mypy]
deps=
    mypy
    typing-extensions
    types-setuptools
    types-PyYAML
    types-Markdown
    types-Jinja2
commands={envbindir}/mypy mkdocs

[testenv:markdown-lint]
whitelist_externals=npm
skip_install=true
passenv=*
commands=
    npm exec --yes -- markdownlint-cli README.md CONTRIBUTING.md docs/ --ignore docs/CNAME

[testenv:codespell]
deps=codespell
skip_install=true
commands=
    {envbindir}/codespell mkdocs docs *.* -S .tox -S LC_MESSAGES -S '*.min.js' -S 'lunr*.js' -S fontawesome-webfont.svg -S tinyseg.js

[testenv:linkchecker]
basepython = python2.7
passenv=*
deps=
    mdx_gh_links
    requests<=2.9.0
    LinkChecker
commands=
    {envpython} -m mkdocs.tests.integration --output={envtmpdir}/builds
    linkchecker {envtmpdir}/builds/

[testenv:jshint]
whitelist_externals=npm
skip_install=true
passenv=*
commands=npm exec --yes -- jshint mkdocs/

[testenv:csslint]
whitelist_externals=npm
skip_install=true
passenv=*
commands=npm exec --yes -- csslint mkdocs/

[testenv:py{37,38,39,310,py3}-integration-no-babel]
passenv = LANG
deps=-rrequirements/project.txt
commands=
    pip uninstall -y babel
    {envpython} -m mkdocs.tests.integration --output={envtmpdir}/builds
